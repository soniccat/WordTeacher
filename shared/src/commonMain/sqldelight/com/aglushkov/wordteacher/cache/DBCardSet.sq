CREATE TABLE IF NOT EXISTS DBCardSet (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  name TEXT NOT NULL,
  date INTEGER NOT NULL, -- creation date
  modificationDate INTEGER NOT NULL DEFAULT 0,
  creationId TEXT NOT NULL DEFAULT "",
  remoteId TEXT NOT NULL DEFAULT ""
);

selectAll:
SELECT *
FROM DBCardSet
ORDER BY date DESC;

selectAllIds:
SELECT id
FROM DBCardSet;

selectUpdated:
SELECT *
FROM DBCardSet
WHERE modificationDate > ? AND remoteId != "";

selectWithouRemoteId:
SELECT *
FROM DBCardSet
WHERE remoteId == "";

selectCardSet:
SELECT *
FROM DBCardSet
WHERE id = ?;

insert:
INSERT INTO DBCardSet(name, date, modificationDate, creationId)
VALUES (?, ?, ?, ?);

insertCardSet:
INSERT INTO DBCardSet(name, date, modificationDate, creationId)
VALUES ?;

updateCardSet:
UPDATE DBCardSet
SET name = ?, date = ?, modificationDate = ?, creationId = ?, remoteId = ?
WHERE id = ?;

lastInsertedRowId:
SELECT last_insert_rowid();

removeCardSet:
DELETE
FROM DBCardSet
WHERE id = ?;

removeAll:
DELETE
FROM DBCardSet;

lastModificationDate:
SELECT MAX(modificationDate)
FROM DBCardSet;

selectRemoteIds:
SELECT remoteId
FROM DBCardSet
WHERE remoteId != "";

updateCardSetRemoteId:
UPDATE DBCardSet
SET remoteId = ?, modificationDate = ?
WHERE creationId = ?;

selectCardSetIdByCardId:
SELECT DBCardSet.id
FROM DBCardSet LEFT JOIN DBCardSetToCardRelation ON DBCardSet.id = DBCardSetToCardRelation.setId AND DBCardSetToCardRelation.cardId = ?;

updateCardSetModificationDate:
UPDATE DBCardSet
SET modificationDate = ?
WHERE id = ?;
