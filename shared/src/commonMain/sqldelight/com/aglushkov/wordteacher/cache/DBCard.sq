import kotlin.collections.List;

CREATE TABLE IF NOT EXISTS DBCard (
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  date INTEGER NOT NULL,
  term TEXT NOT NULL,
  partOfSpeech TEXT NOT NULL,
  transcription TEXT,
  definitions TEXT AS List<String> NOT NULL,
  synonyms TEXT AS List<String> NOT NULL,
  examples TEXT AS List<String> NOT NULL,
-- Progress
  progressLevel INTEGER AS Int DEFAULT 0,
  progressLastMistakeCount INTEGER AS Int DEFAULT 0,
  progressLastLessonDate INTEGER DEFAULT 0
);

selectAllCardIds:
SELECT id
FROM DBCard;

selectCards:
SELECT *
FROM DBCard
WHERE DBCard.id IN ?;

insert:
INSERT INTO DBCard(date, term, partOfSpeech, transcription, definitions, synonyms, examples, progressLevel, progressLastMistakeCount, progressLastLessonDate)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

insertCard:
INSERT INTO DBCard(date, term, partOfSpeech, transcription, definitions, synonyms, examples, progressLevel, progressLastMistakeCount, progressLastLessonDate)
VALUES ?;

updateCard:
UPDATE DBCard
SET date = ?, term = ?, partOfSpeech = ?, transcription = ?, definitions = ?, synonyms = ?, examples = ?, progressLevel = ?, progressLastMistakeCount = ?, progressLastLessonDate = ?
WHERE id = ?;

lastInsertedRowId:
SELECT last_insert_rowid();

removeCard:
DELETE
FROM DBCard
WHERE id = ?;

removeCardsBySetId:
DELETE
FROM DBCard
WHERE id IN (SELECT cardId FROM DBCardSetToCardRelation WHERE setId = ?);

removeAll:
DELETE
FROM DBCard;

setProgress:
UPDATE DBCard
SET progressLevel = ?, progressLastMistakeCount = ?, progressLastLessonDate = ?
WHERE id = ?;
