[versions]
agp = "8.2.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.0"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.0"
compose-plugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.0.0"
kotlinxSerializationVersion = "1.7.1"

appmetrica = "7.0.0"
kermit = "2.0.2"
jsoup = "1.14.3"
okio = "3.7.0"
opennlp = "1.9.4"
sqlDelight = "2.0.2"
ktor = "2.2.2"
mokoResources = "0.24.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

appmetrica = { module = "io.appmetrica.analytics:analytics", version.ref = "appmetrica"}
logger = { module = "co.touchlab:kermit", version.ref = "kermit" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okioFakeFileSystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }
opennlp = {module = "org.apache.opennlp:opennlp-tools", version.ref = "opennlp" }
sqlDelightRuntime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelightiOSDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelightAndroidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelightJvmDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
#kotlinxSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinVersion" }

ktorCommonCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktorAndroidClient = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktoriOSClient = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktorDesktop = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorContentEncoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }

kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
mokoResourcesLib = { module = "dev.icerock.moko:resources", version.ref = "mokoResources"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources"}


#[versions]
#kotlinVersion = "1.9.21"
#kotlinxSerializationVersion = "1.4.1"
#kotlinxDateTime = "0.4.0"
#sqlDelight = "2.0.1"
#androidGradlePlugin = "8.1.4"
#
#kotlinPoet = "1.14.2"
#
## https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compatibility-and-versioning.html#use-a-developer-version-of-compose-multiplatform-compiler
#composeJetpackCompiler = "1.5.14"
#
#composeJetpackUiTooling = "1.5.2"
##composeJetpack = "1.4.0"
#androidComposeDesktop = "1.6.11"
#androidFragments = "1.4.1"
#androidMaterial = "1.6.1"
#androidAppCompat = "1.4.2"
#androidConstraintLayout = "2.1.4"
#androidCoreKts = "1.8.0"
#androidLifecycle = "2.4.1"
#dagger = "2.47"
#playServicesPlugin = "4.3.13"
#playServicesAuth = "20.4.0"
#vkId = "1.3.1"
#
#mokoResources = "0.23.0"
#decomposeVersion = "2.2.2"
#essenty = "1.3.0"
#coroutines = "1.7.3"
#ktor = "2.2.2"
#okio = "3.7.0"
#kermit = "2.0.2"
#uuid = "0.3.0"
#junit = "4.13.2"
#stately = "2.0.6"
#mockitoKotlin = "4.0.0"
#settings = "1.0.0"
#appmetrica = "7.0.0"
#
##JVM
#bouncyCastle = "1.67"
#
#[libraries]
#kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
#kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlinVersion" }
#kotlinTestAnnotations = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlinVersion" }
#kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
#kotlinxSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinVersion" }
#kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
#kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
#
#kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
#
#androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
#androidFragments = { module = "androidx.fragment:fragment-ktx", version.ref = "androidFragments" }
#androidMaterial = { module = "com.google.android.material:material", version.ref = "androidMaterial" }
#androidAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompat" }
#androidConstraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidConstraintLayout" }
#androidCoreKts = { module = "androidx.core:core-ktx", version.ref = "androidCoreKts" }
#androidViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidLifecycle" }
#androidLifecycleKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidLifecycle" }
##androidComposeCompiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeJetpackCompiler" }
##androidComposeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeJetpack" }
##androidComposeMaterial = { module = "androidx.compose.material:material", version.ref = "composeJetpack" }
#androidComposeActivity = {  module = "androidx.activity:activity-compose", version.ref = "androidComposeActivity" }
#androidComposeUITooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeJetpackUiTooling" }
#androidComposeUIToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeJetpackUiTooling" }
#androidComposeDesktop = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "androidComposeDesktop" }
#dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
#daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
#
#playServicesPlugin = { module = "com.google.gms:google-services", version.ref = "playServicesPlugin" }
#playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
#
#decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
#decomposeJetpack = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decomposeVersion" }
#decomposeJetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decomposeVersion" }
#
#essentyParcelable = { module = "com.arkivanov.essenty:parcelable", version.ref = "essenty" }
#essentryInstanceKeeper = { module = "com.arkivanov.essenty:instance-keeper", version.ref = "essenty" }
#essentryStateKeeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }
#
#uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
#
#sqlDelight = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqlDelight" }
#sqlDelightRuntime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
#sqlDelightiOSDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
#sqlDelightAndroidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
#sqlDelightJvmDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
#
#coroutinesCommon = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
#coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
#coroutinesCommonTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
#coroutinesSwing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }
#
#ktorCommonCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
#ktorAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
#ktorAndroidClient = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
#ktoriOSClient = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
#ktorDesktop = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
#ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
#ktorContentEncoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
#
#statelyCommon = { module = "co.touchlab:stately-common", version.ref = "stately" }
#statelyConcurrency = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }
#
#settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
#settingsCoroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
#settingsDataStore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
#
#mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
#
#okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
#okioFakeFileSystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }
#logger = { module = "co.touchlab:kermit", version.ref = "kermit" }
#junit = { module = "junit:junit", version.ref = "junit" }
#
#mokoResourcesLib = { module = "dev.icerock.moko:resources", version.ref = "mokoResources"}
#mokoResourcesGenerator = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResources"}
#mokoCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources"}
#
#vkId = { module = "com.vk.id:vkid", version.ref = "vkId" }
#appmetrica = { module = "io.appmetrica.analytics:analytics", version.ref = "appmetrica"}
#
##JVM
#bouncyCastle = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncyCastle" }
