[versions]
agp = "8.2.0"
android-compileSdk = "35"
android-minSdk = "23"
android-targetSdk = "35"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-material = "1.12.0"
compose-plugin = "1.6.11"
datastore-preferences = "1.0.0"
coroutines = "1.9.0-RC"

desugar_jdk_libs = "2.0.4"
junit = "4.13.2"
kotlin = "2.0.0"
kotlinxSerializationVersion = "1.7.1"
kotlinxDateTime = "0.4.0"
playServicesPlugin = "4.3.13"
playServicesAuth = "20.4.0"

robolectric = "4.13"
vkId = "2.0.0"
yandexId = "3.1.3"
appmetrica = "7.0.0"
kermit = "2.0.2"
jsoup = "1.14.3"
okio = "3.7.0"
opennlp = "1.9.4"
sqlDelight = "2.0.2"
ktor = "2.3.12"
mokoResources = "0.24.1"
decomposeVersion = "2.2.2"
settings = "1.2.0"
stately = "2.0.6"
uuid = "0.3.0"
dagger = "2.47"

# for android tests
mockitoKotlin = "4.0.0"

# for desktop
bouncyCastle = "1.67"

# for config-generator
kotlinPoet = "1.14.2"

[libraries]
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
datastorePreference = { module= "androidx.datastore:datastore-preferences", version.ref="datastore-preferences" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

appmetrica = { module = "io.appmetrica.analytics:analytics", version.ref = "appmetrica"}
logger = { module = "co.touchlab:kermit", version.ref = "kermit" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okioFakeFileSystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }
opennlp = {module = "org.apache.opennlp:opennlp-tools", version.ref = "opennlp" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
sqlDelightRuntime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }
sqlDelightiOSDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelightAndroidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelightJvmDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }

ktorCommonCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktorAndroidClient = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktoriOSClient = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorContentEncoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }

kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
mokoResourcesLib = { module = "dev.icerock.moko:resources", version.ref = "mokoResources"}
mokoCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources"}

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
decomposeJetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decomposeVersion" }
settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settingsCoroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
settingsDataStore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "settings" }
statelyCommon = { module = "co.touchlab:stately-common", version.ref = "stately" }
statelyConcurrency = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }
vkId = { module = "com.vk.id:vkid", version.ref = "vkId" }
yandexId = { module = "com.yandex.android:authsdk", version.ref = "yandexId" }

# for android tests
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
coroutinesCommonTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# for desktop
coroutinesSwing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }
bouncyCastle = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncyCastle" }
ktorDesktop = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }

# for config-generator
kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources"}
playServicesPlugin = { id = "com.google.gms.google-services", version.ref = "playServicesPlugin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
