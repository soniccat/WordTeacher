version: "3.8"

services:
  auth:
    container_name: "auth${TEST_SUFFIX}"
    build:
      context: ./
      dockerfile: ./Auth.Dockerfile
    image: "auth"
    command:
      - "-serverPort"
      - "${SERVICE_AUTH_PORT}"
      - "-mongoURI"
      - "mongodb://172.16.0.1:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "172.16.0.3:${REDIS_PORT}"
    networks:
      mongo_net:
        ipv4_address: 172.16.0.10
    ports:
      - target: "${SERVICE_AUTH_PORT}"
        published: "${SERVICE_AUTH_PORT}"

  cardsets:
    container_name: "cardsets${TEST_SUFFIX}"
    build:
      context: ./
      args:
        PORT: "${SERVICE_CARDSETS_PORT}"
      dockerfile: ./CardSets.Dockerfile
    image: cardsets
    command:
      - "-serverPort"
      - "${SERVICE_CARDSETS_PORT}"
      - "-mongoURI"
      - "mongodb://172.16.0.1:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "172.16.0.3:${REDIS_PORT}"
    networks:
      mongo_net:
        ipv4_address: 172.16.0.11
    ports:
      - target: "${SERVICE_CARDSETS_PORT}"
        published: "${SERVICE_CARDSETS_PORT}"

  redis:
    container_name: "redis${TEST_SUFFIX}"
    image: redis:6.2-alpine
    restart: always
    networks:
      mongo_net:
        ipv4_address: 172.16.0.3
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --port ${REDIS_PORT}
    volumes:
      - ${VOLUME_REDIS}:/data

  mongo:
    container_name: "mongo${TEST_SUFFIX}"
    image: mongo:5
    networks:
      mongo_net:
        ipv4_address: 172.16.0.1
    command: --replSet rs0 --port ${MONGODB_PORT} --bind_ip 127.0.0.1,172.16.0.1
    ports:
      - target: "${MONGODB_PORT}"
        published: "${MONGODB_PORT}"
    volumes:
      - ${VOLUME_MONGODB}:/data/db
      - ${VOLUME_MONGOCONFIG}:/data/configdb

  mongosetup:
    container_name: "mongo-setup${TEST_SUFFIX}"
    image: mongo:5
    networks:
      mongo_net:
        ipv4_address: 172.16.0.2
    depends_on:
      - mongo
    restart: "no"
    entrypoint: [ "bash", "-c", "sleep 1 && mongo --host 172.16.0.1:${MONGODB_PORT} --eval 'rs.initiate()'"]

networks:
  mongo_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
          gateway: 172.16.0.254

volumes:
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_REDIS_PATH}"
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_MONGODB_PATH}"
  mongoconfig:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_MONGOCONFIG_PATH}"
  redis_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_REDIS_PATH}"
  mongodb_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_MONGODB_PATH}"
  mongoconfig_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_MONGOCONFIG_PATH}"
