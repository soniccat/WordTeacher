version: "3.8"

services:
  auth:
    build:
      context: ./
      args:
        PORT: "${SERVICE_AUTH_PORT}"
      dockerfile: ./Auth.Dockerfile
    image: "auth"
    command:
      - "-serverPort"
      - "${SERVICE_AUTH_PORT}"
      - "-mongoURI"
      - "mongodb://db:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "cache:${REDIS_PORT}"
    ports:
      - target: "${SERVICE_AUTH_PORT}"
        published: "${SERVICE_AUTH_PORT}"
  cardsets:
#    build:
#      context: ./
#      dockerfile: ./CardSets.Dockerfile
    image: cardsets
    command:
      - "-mongoURI"
      - "mongodb://db:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "cache:${REDIS_PORT}"
    ports:
      - target: "${SERVICE_CARDSETS_PORT}"
        published: "${SERVICE_CARDSETS_PORT}"
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --port ${REDIS_PORT}
    volumes:
      - testdb:/sth/to/test1

  db:
    image: mongo:5
    command: --replSet rs0 --port ${MONGODB_PORT}
    ports:
      - target: "${MONGODB_PORT}"
        published: "${MONGODB_PORT}"
    volumes:
      - testdb:/sth/to/test2

  mongosetup:
    image: mongo:5
    depends_on:
      - db
    restart: "no"
    entrypoint: [ "bash", "-c", "sleep 5 && mongo --host db:${MONGODB_PORT} --eval 'rs.initiate()'"]

volumes:
  testdb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME}"

