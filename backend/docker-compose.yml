version: "3.8"

services:
  nginx:
    container_name: "apigateway"
    hostname: "apigateway"
    image: nginx:alpine
    volumes:
      - ./nginx:/etc/nginx/templates
    networks:
      mongo_net:
        ipv4_address: 172.16.0.12
    ports:
      - 9090:9090
    environment:
      - AUTH_PORT=${AUTH_PORT}
      - CARDSETS_PORT=${CARDSETS_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "5"
    restart: always

  auth:
    container_name: "auth${TEST_SUFFIX}"
    hostname: "auth"
    build:
      context: ./
      dockerfile: ./Auth.Dockerfile
    image: "auth"
    command:
      - "-serverPort"
      - "${AUTH_PORT}"
      - "-mongoURI"
      - "mongodb://172.16.0.1:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "172.16.0.3:${REDIS_PORT}"
    networks:
      mongo_net:
        ipv4_address: 172.16.0.10
    ports:
      - target: "${AUTH_PORT}"
        published: "${AUTH_PORT}"

  cardsets:
    container_name: "cardsets${TEST_SUFFIX}"
    hostname: "cardsets"
    build:
      context: ./
      args:
        PORT: "${CARDSETS_PORT}"
      dockerfile: ./CardSets.Dockerfile
    image: cardsets
    command:
      - "-serverPort"
      - "${CARDSETS_PORT}"
      - "-mongoURI"
      - "mongodb://172.16.0.1:${MONGODB_PORT}/?replicaSet=rs0"
      - "-redisAddress"
      - "172.16.0.3:${REDIS_PORT}"
      - "-rabbitMQ"
      - "amqp://guest:guest@172.16.0.4:5672/"
    depends_on:
      - rabbitmq
    networks:
      mongo_net:
        ipv4_address: 172.16.0.11
    ports:
      - target: "${CARDSETS_PORT}"
        published: "${CARDSETS_PORT}"

  redis:
    container_name: "redis${TEST_SUFFIX}"
    hostname: "redis"
    image: redis:6.2-alpine
    restart: always
    networks:
      mongo_net:
        ipv4_address: 172.16.0.3
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    command: redis-server --port ${REDIS_PORT}
    volumes:
      - ${VOLUME_REDIS}:/data

  mongo:
    container_name: "mongo${TEST_SUFFIX}"
    hostname: "mongo"
    image: mongo:5
    networks:
      mongo_net:
        ipv4_address: 172.16.0.1
    command: --replSet rs0 --port ${MONGODB_PORT} --bind_ip 127.0.0.1,172.16.0.1
    ports:
      - target: "${MONGODB_PORT}"
        published: "${MONGODB_PORT}"
    volumes:
      - ${VOLUME_MONGODB}:/data/db
      - ${VOLUME_MONGOCONFIG}:/data/configdb

  mongosetup:
    container_name: "mongo-setup${TEST_SUFFIX}"
    hostname: "mongosetup"
    image: mongo:5
    networks:
      mongo_net:
        ipv4_address: 172.16.0.2
    depends_on:
      - mongo
    restart: "no"
    entrypoint: [ "bash", "-c", "sleep 1 && mongo --host 172.16.0.1:${MONGODB_PORT} --eval 'rs.initiate()'"]

  rabbitmq:
    container_name: 'rabbitmq'
    hostname: 'rabbitmq'
    image: rabbitmq:3-management-alpine
    networks:
      mongo_net:
        ipv4_address: 172.16.0.4
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ${VOLUME_RABBITMQDATA_PATH}:/var/lib/rabbitmq/
      - ${VOLUME_RABBITMQLOG_PATH}:/var/log/rabbitmq

networks:
  mongo_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24
          gateway: 172.16.0.254

volumes:
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_REDIS_PATH}"
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_MONGODB_PATH}"
  mongoconfig:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_MONGOCONFIG_PATH}"
  rabbitmq:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_RABBITMQDATA_PATH}"
  rabbitmqlog:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "${VOLUME_RABBITMQLOG_PATH}"
  redis_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_REDIS_PATH}"
  mongodb_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_MONGODB_PATH}"
  mongoconfig_test:
#    driver: local
#    driver_opts:
#      o: bind
#      type: none
#      device: "${VOLUME_MONGOCONFIG_PATH}"
