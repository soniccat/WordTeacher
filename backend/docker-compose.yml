version: "3.8"

services:
  auth:
#    build:
#      context: ./
#      dockerfile: ./Auth.Dockerfile
    image: auth
    command:
      - "-mongoURI"
      - "mongodb://db:27017/?replicaSet=rs0"
      - "-redisAddress"
      - "cache:6379"
    ports:
      - target: 4000
        published: 4000
  cardsets:
#    build:
#      context: ./
#      dockerfile: ./CardSets.Dockerfile
    image: cardsets
    command:
      - "-mongoURI"
      - "mongodb://db:27017/?replicaSet=rs0"
      - "-redisAddress"
      - "cache:6379"
    ports:
      - target: 4001
        published: 4001
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server 
    volumes:
      - testdb:/sth/to/test1
#    ports:
#      - target: 6379
#        published: 6379
    #     protocol: tcp
    #     mode: host

#  db:
#    image: mongo:4.2.11
#    command: --replSet rs0
#    ports:
#      - "28017:27017"
#    environment:
#      MONGO_INITDB_DATABASE: attachment-api-local-dev
#    healthcheck:
#      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/admin --quiet
#      interval: 2s
#      timeout: 3s
#      retries: 5
#
#  mongo-init:
#    image: mongo:5
#    command: >
#      mongo --host db:27017 --eval
#      '
#      rs.initiate( {
#         _id : "rs0",
#         members: [
#            { _id: 0, host: "localhost:27017" }
#         ]
#      })
#      '

  db:
    image: mongo:5
    command: --replSet rs0
    ports:
      - target: 27017
        published: 27017
    #     protocol: tcp
    #     mode: host
    volumes:
      - testdb:/sth/to/test2
volumes:
  testdb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /tmp/serverdir

